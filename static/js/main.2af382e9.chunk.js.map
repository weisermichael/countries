{"version":3,"sources":["App.js","index.js"],"names":["require","config","Weather","weatherData","imgSrc","process","weather","icon","console","log","temp","src","alt","wind_spd","wind_cdir","CountryInfo","i","countries","disp","useState","setWeatherData","urlStr","capital","useEffect","axios","get","then","response","data","name","common","population","Object","values","languages","map","l","a","flags","png","Display","search","namesSearched","commonNames","handleChange","handleClick","displayCountry","length","value","onChange","indexOf","n","ind","onClick","App","setSearch","setCountries","setDisplay","c","filter","toLowerCase","includes","event","target","newArr","parentElement","getAttribute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2af382e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst Weather = ({weatherData}) => {\r\n  const imgSrc = process.env.PUBLIC_URL + \"/icons/\" + weatherData.weather.icon + \".png\"\r\n  console.log(imgSrc)\r\n  return (\r\n    <>\r\n      <b>temperature: </b>{weatherData.temp} Celcius <br/>\r\n      <img src={imgSrc} alt=\"weather icon\"/> <br/>\r\n      <b>wind: </b> {weatherData.wind_spd} mph direction {weatherData.wind_cdir} <br/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst CountryInfo = ({i, countries, disp}) => {\r\n  const [weatherData, setWeatherData] = useState(null)\r\n  const api_key = process.env.REACT_APP_API_KEY\r\n  //console.log(process.env.REACT_APP_API_KEY);\r\n  const urlStr = \"https://api.weatherbit.io/v2.0/current?key=\" + api_key + \"&city=\" + countries[i].capital\r\n  useEffect(() =>{\r\n    console.log(\"effect\")\r\n    axios.get(urlStr).then((response) => {setWeatherData(response.data.data[0])})\r\n  }, [])\r\n\r\n  if (disp) {\r\n    return (\r\n      <>\r\n        <h1>{countries[i].name.common}</h1>\r\n        <br/>\r\n        capital: {countries[i].capital} <br/>\r\n        population: {countries[i].population} <br/>\r\n        <h2>languages</h2>\r\n        <ul>\r\n          {Object.values(countries[i].languages).map((l, a) => <li key={a}>{l}</li>)}\r\n        </ul>\r\n        <img src={countries[i].flags.png} alt=\"flag\" />\r\n        <br/>\r\n        <h2>Weather in {countries[i].capital}</h2>\r\n        {weatherData && <Weather weatherData={weatherData} /> }\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <> </>\r\n    )\r\n  }\r\n}\r\n\r\nconst Display = ( {countries, search, namesSearched, commonNames, handleChange, handleClick, displayCountry} ) => {\r\n\r\n/*   const getWeather = (ind) => {\r\n    let weather = \"\"\r\n    const urlStr = \"current?access_key=\" + process.env.REACT_APP_API_KEY + \"&query=\" + countries[ind].capital\r\n    useEffect(() =>\r\n    axios.get(\"http://api.weatherstack.com/\" + urlStr)\r\n         .then(response => weather=response.data))\r\n    return weather\r\n  }\r\n */\r\n  if (search.length === 0) {\r\n    return (\r\n      <div>\r\n        find countries <input value={search} onChange={handleChange}></input>\r\n        <br/>\r\n        specify a filter\r\n      </div>\r\n    );\r\n  }\r\n\r\n  else if (namesSearched.length > 10) {\r\n    return (\r\n      <div>\r\n        find countries <input value={search} onChange={handleChange}></input>\r\n        <br/>\r\n        Too many matches, specify another filter\r\n      </div>\r\n    );\r\n  }\r\n\r\n  else if (namesSearched.length === 1){\r\n    const i = commonNames.indexOf(namesSearched[0])\r\n    return (\r\n      <div>\r\n        find countries <input value={search} onChange={handleChange}></input>\r\n        <CountryInfo i={i} countries={countries} disp={true}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      find countries <input value={search} onChange={handleChange}></input>\r\n      <ul>\r\n        {namesSearched.map(n => <>\r\n                                  <li ind={commonNames.indexOf(n)} \r\n                                      key={commonNames.indexOf(n)}> {n} \r\n                                    <button key={commonNames.indexOf(n)}\r\n                                            onClick={handleClick}>show</button>\r\n                                    \r\n                                  </li>\r\n                                  <CountryInfo key={1+commonNames.indexOf(n)} \r\n                                               i={commonNames.indexOf(n)} \r\n                                               countries={countries} \r\n                                               disp={displayCountry[commonNames.indexOf(n)]}/>\r\n                                </>)}\r\n        \r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState('')\r\n  const [countries, setCountries] = useState([])\r\n  const [displayCountry, setDisplay] = useState([])\r\n\r\n  const handleChange = (event) => {\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    const newArr = [...displayCountry]\r\n    if (displayCountry[event.target.parentElement.getAttribute('ind')] === true) {\r\n      newArr[event.target.parentElement.getAttribute('ind')] = ''\r\n    }\r\n    else{\r\n      newArr[event.target.parentElement.getAttribute('ind')] = true\r\n    }\r\n    setDisplay(newArr)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://restcountries.com/v3.1/all\")\r\n         .then(response => setCountries(response.data))},[])\r\n  \r\n  const commonNames = countries.map(c => c.name.common)\r\n  const namesSearched = commonNames.filter(n => n.toLowerCase().includes(search.toLowerCase()))\r\n\r\n\r\n  return (\r\n    <Display countries={countries}\r\n             search={search} \r\n             namesSearched={namesSearched} \r\n             commonNames={commonNames} \r\n             handleChange={handleChange} \r\n             handleClick={handleClick}\r\n             displayCountry={displayCountry} />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}